
<BugCollection sequence='0' release='' analysisTimestamp='1648898177672' version='3.1.8' timestamp='1648898154006'><Project projectName='maven-static-code-analysis'><Jar>C:\Users\Preston\test\Personal Project\Code-Analysis-SpotBugs\target\classes</Jar><SrcDir>C:\Users\Preston\test\Personal Project\Code-Analysis-SpotBugs\src\main\java</SrcDir><WrkDir>C:\Users\Preston\test\Personal Project\Code-Analysis-SpotBugs\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='6fa936bbaa7235276c95d9f009770aa3' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>main.java.com.spotbug.examples.SpotbugExample.test() concatenates strings using + in a loop</LongMessage><Class classname='main.java.com.spotbug.examples.SpotbugExample' primary='true'><SourceLine classname='main.java.com.spotbug.examples.SpotbugExample' start='3' end='23' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java'><Message>At SpotbugExample.java:[lines 3-23]</Message></SourceLine><Message>In class main.java.com.spotbug.examples.SpotbugExample</Message></Class><Method isStatic='false' classname='main.java.com.spotbug.examples.SpotbugExample' signature='()V' name='test' primary='true'><SourceLine endBytecode='195' classname='main.java.com.spotbug.examples.SpotbugExample' start='13' end='23' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java' startBytecode='0'></SourceLine><Message>In method main.java.com.spotbug.examples.SpotbugExample.test()</Message></Method><SourceLine endBytecode='41' classname='main.java.com.spotbug.examples.SpotbugExample' start='18' end='18' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java' startBytecode='41' primary='true'><Message>At SpotbugExample.java:[line 18]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7b8eee04b0877d065ae639ce3696726d' rank='18' abbrev='UuF' category='PERFORMANCE' priority='2' type='UUF_UNUSED_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unused field</ShortMessage><LongMessage>Unused field: main.java.com.spotbug.examples.SpotbugExample.abc</LongMessage><Class classname='main.java.com.spotbug.examples.SpotbugExample' primary='true'><SourceLine classname='main.java.com.spotbug.examples.SpotbugExample' start='3' end='23' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java'><Message>At SpotbugExample.java:[lines 3-23]</Message></SourceLine><Message>In class main.java.com.spotbug.examples.SpotbugExample</Message></Class><Field isStatic='false' classname='main.java.com.spotbug.examples.SpotbugExample' signature='I' name='abc' primary='true'><SourceLine classname='main.java.com.spotbug.examples.SpotbugExample' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java'><Message>In SpotbugExample.java</Message></SourceLine><Message>Field main.java.com.spotbug.examples.SpotbugExample.abc</Message></Field><SourceLine synthetic='true' classname='main.java.com.spotbug.examples.SpotbugExample' sourcepath='main/java/com/spotbug/examples/SpotbugExample.java' sourcefile='SpotbugExample.java'><Message>In SpotbugExample.java</Message></SourceLine></BugInstance><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='UuF' category='PERFORMANCE' type='UUF_UNUSED_FIELD'><ShortDescription>Unused field</ShortDescription><Details>

  &lt;p&gt; This field is never used.&amp;nbsp; Consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugCode abbrev='UuF'><Description>Unused field</Description></BugCode><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='1' priority_2='2' total_size='13' clock_seconds='0.85' referenced_classes='12' vm_version='25.312-b07' total_bugs='2' java_version='1.8.0_312' gc_seconds='0.01' alloc_mbytes='491.00' cpu_seconds='3.28' peak_mbytes='169.24' timestamp='Sat, 2 Apr 2022 06:15:54 -0500'><FileStats path='main/java/com/spotbug/examples/SpotbugExample.java' size='13' bugHash='10235835a5f027ee19a16b50b460be54' bugCount='2'></FileStats><PackageStats package='main.java.com.spotbug.examples' total_bugs='2' priority_2='2' total_size='13' total_types='1'><ClassStats bugs='2' size='13' priority_2='2' interface='false' sourceFile='SpotbugExample.java' class='main.java.com.spotbug.examples.SpotbugExample'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='488' totalMilliseconds='165' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='2404' standardDeviationMicrosecondsPerInvocation='287' invocations='339'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='324' totalMilliseconds='109' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='7611' standardDeviationMicrosecondsPerInvocation='682' invocations='338'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2646' totalMilliseconds='31' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='7450' standardDeviationMicrosecondsPerInvocation='2834' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='463' totalMilliseconds='28' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='2823' standardDeviationMicrosecondsPerInvocation='482' invocations='61'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='10700' totalMilliseconds='21' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='20943' standardDeviationMicrosecondsPerInvocation='10243' invocations='2'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='61' totalMilliseconds='18' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='529' standardDeviationMicrosecondsPerInvocation='95' invocations='306'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1411' totalMilliseconds='16' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='5266' standardDeviationMicrosecondsPerInvocation='1363' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='571' totalMilliseconds='15' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='9549' standardDeviationMicrosecondsPerInvocation='1768' invocations='28'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='6835' totalMilliseconds='13' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='9646' standardDeviationMicrosecondsPerInvocation='2811' invocations='2'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1061' totalMilliseconds='12' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='5291' standardDeviationMicrosecondsPerInvocation='1552' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1048' totalMilliseconds='12' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='3123' standardDeviationMicrosecondsPerInvocation='966' invocations='12'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>