
<BugCollection sequence='0' release='' analysisTimestamp='1648912210167' version='3.1.8' timestamp='1648912207498'><Project projectName='Snake Game'><Jar>C:\Users\Preston\test\Personal Project\Demo-Project\target\classes</Jar><SrcDir>C:\Users\Preston\test\Personal Project\Demo-Project\src</SrcDir><SrcDir>C:\Users\Preston\test\Personal Project\Demo-Project\target\generated-sources\annotations</SrcDir><WrkDir>C:\Users\Preston\test\Personal Project\Demo-Project\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='d3d298cc40fd6990dc2a91f5c6339ad4' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>new main.java.Gameplay() concatenates strings using + in a loop</LongMessage><Class classname='main.java.Gameplay' primary='true'><SourceLine classname='main.java.Gameplay' start='41' end='367' sourcepath='main/java/Gameplay.java' sourcefile='Gameplay.java'><Message>At Gameplay.java:[lines 41-367]</Message></SourceLine><Message>In class main.java.Gameplay</Message></Class><Method isStatic='false' classname='main.java.Gameplay' signature='()V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='637' classname='main.java.Gameplay' start='78' end='100' sourcepath='main/java/Gameplay.java' sourcefile='Gameplay.java' startBytecode='0'></SourceLine><Message>In method new main.java.Gameplay()</Message></Method><SourceLine endBytecode='358' classname='main.java.Gameplay' start='98' end='98' sourcepath='main/java/Gameplay.java' sourcefile='Gameplay.java' startBytecode='358' primary='true'><Message>At Gameplay.java:[line 98]</Message></SourceLine></BugInstance><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='2' priority_2='1' total_size='255' clock_seconds='2.34' referenced_classes='281' vm_version='25.312-b07' total_bugs='1' java_version='1.8.0_312' gc_seconds='0.03' alloc_mbytes='491.00' cpu_seconds='9.88' peak_mbytes='194.40' timestamp='Sat, 2 Apr 2022 10:10:07 -0500'><FileStats path='main/java/Gameplay.java' size='238' bugHash='652141fbaf6472d2b1654ce06a6218d5' bugCount='1'></FileStats><FileStats path='main/java/Main.java' size='17' bugCount='0'></FileStats><PackageStats package='main.java' total_bugs='1' priority_2='1' total_size='255' total_types='2'><ClassStats bugs='1' size='238' priority_2='1' interface='false' sourceFile='Gameplay.java' class='main.java.Gameplay'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='Main.java' class='main.java.Main'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='387' totalMilliseconds='582' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1118' standardDeviationMicrosecondsPerInvocation='210' invocations='1503'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='200' totalMilliseconds='299' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='12374' standardDeviationMicrosecondsPerInvocation='614' invocations='1498'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='660' totalMilliseconds='185' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='10874' standardDeviationMicrosecondsPerInvocation='1270' invocations='281'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='635' totalMilliseconds='178' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='8873' standardDeviationMicrosecondsPerInvocation='1181' invocations='281'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='174' totalMilliseconds='109' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='1639' standardDeviationMicrosecondsPerInvocation='191' invocations='629'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='182' totalMilliseconds='51' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='3581' standardDeviationMicrosecondsPerInvocation='373' invocations='281'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='34' totalMilliseconds='50' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='4706' standardDeviationMicrosecondsPerInvocation='145' invocations='1455'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='125' totalMilliseconds='43' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='8784' standardDeviationMicrosecondsPerInvocation='496' invocations='347'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='146' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='1854' standardDeviationMicrosecondsPerInvocation='222' invocations='281'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='137' totalMilliseconds='38' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' maxMicrosecondsPerInvocation='8866' standardDeviationMicrosecondsPerInvocation='733' invocations='281'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>